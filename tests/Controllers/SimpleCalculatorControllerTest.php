<?php
/*
 * APIMATICCalculatorLib
 *
 * This file was automatically generated by APIMATIC v2.0 on 09/28/2016
 */

use APIMATICCalculatorLib\APIException;
use APIMATICCalculatorLib\Exceptions;
use APIMATICCalculatorLib\APIHelper; 
use APIMATICCalculatorLib\Models;

class SimpleCalculatorControllerTest extends PHPUnit_Framework_TestCase {
    
    /**
     * @var \APIMATICCalculatorLib\Controllers\SimpleCalculatorController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass()
    {
        $client = new APIMATICCalculatorLib\APIMATICCalculatorClient();
        self::$controller = $client->getSimpleCalculator();	
    }

    /**
     * Setup test
     */
    protected function setUp()
    {
        $this->httpResponse = new HttpCallBackCatcher();
    }

    /**
     * Test Case to see if Calculator works
     */
    public function testMultiplicationTest() {
        // Parameters for the API call
        $input = array();
        $input['operation'] = APIHelper::deserialize('MULTIPLY', new Models\string());
        $input['x'] = 5;
        $input['y'] = 6;

        // Set callback and perform API call
        $result = null;
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
        	$result = self::$controller->getCalculate($input);
        } catch(APIException $e) {};

        // Test response code
        $this->assertEquals(200, $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200");

        // Test whether the captured response is as we expected
        $this->assertNotNull($result,
            "Result does not exist");

 
        $this->assertEquals(30.0, $result,
            "Response does not match expected value", ASSERT_PRECISION);
    }

    /**
     * Test Case to see if Calculator works
     */
    public function testSummationTest() {
        // Parameters for the API call
        $input = array();
        $input['operation'] = APIHelper::deserialize('SUM', new Models\string());
        $input['x'] = 5;
        $input['y'] = 6;

        // Set callback and perform API call
        $result = null;
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
        	$result = self::$controller->getCalculate($input);
        } catch(APIException $e) {};

        // Test response code
        $this->assertEquals(200, $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200");

        // Test whether the captured response is as we expected
        $this->assertNotNull($result,
            "Result does not exist");

 
        $this->assertEquals(11.0, $result,
            "Response does not match expected value", ASSERT_PRECISION);
    }

}
